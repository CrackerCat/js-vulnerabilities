%OptimizeFunctionOnNextCall(print);
function __f_3() {
	__v_1[__v_7].__f_4 = __v_6.foo;
}
try {
	__f_3();
} catch(e) { print("Caught: " + e); }
__v_6 = [ 3];
for (x in __v_6) {
	try {
		throw "ex1";
	} catch(er1) {
	} finally {
	}
}
